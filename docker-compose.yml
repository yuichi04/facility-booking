services:
  frontend:
    build: ./services/facility-booking-frontend
    environment:
      - AUTH_API_URL=${AUTH_API_URL}
      - BOOKINGS_API_URL=${BOOKINGS_API_URL}
      - FACILITIES_API_URL=${FACILITIES_API_URL}
    ports:
      - "${FRONTEND_PORT}:3000"
    networks:
      - facility-booking
    volumes:
      - ./services/facility-booking-frontend:/frontend
  admin-frontend:
    build: ./services/facility-booking-admin-frontend
    environment:
      - AUTH_API_URL=${AUTH_API_URL}
      - BOOKINGS_API_URL=${BOOKINGS_API_URL}
      - FACILITIES_API_URL=${FACILITIES_API_URL}
    ports:
      - "${ADMIN_FRONTEND_PORT}:3001"
    networks:
      - facility-booking
    volumes:
      - ./services/facility-booking-admin-frontend:/admin-frontend
  auth-api:
    build: ./services/facility-booking-auth-api
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${AUTH_API_PORT}:8080"
    networks:
      - facility-booking
    volumes:
      - ./services/facility-booking-auth-api:/auth-api
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:14.15
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - facility-booking
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  pgadmin:
    image: dpage/pgadmin4:9.3
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./config/pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      - facility-booking
    depends_on:
      db:
        condition: service_healthy
networks:
  facility-booking:
volumes:
  postgres-data:
  pgadmin-data:
